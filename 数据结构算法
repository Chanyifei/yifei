#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MAX_STUDENT_NUM 10
typedef struct student{
	int id;
	char name [10];
	int phone;
}STUDENT;
int Insert(STUDENT stu[],int num);
void printALL(STUDENT stu[],int num);
int Search(STUDENT stu[],int student_id);
int Delete(STUDENT stu[],int student_id);

int main ()
{
	STUDENT a[MAX_STUDENT_NUM];
	int res,num,student_id;
	int command;

	while(1)
	{
		printf("输入要执行的操作：\n 1：插入新的学生；\n 2：删除学生；\n 3：查找学生；\n 4：显示所有的学生信息；\n 5：退出\n");
		scanf("%d",&command);
		fflush(stdin);
		switch(command)
		{
			case 1:
				printf("输入新同学的人数：\n");
				scanf("%d",&num);
				fflush(stdin);
				if(num>MAX_STUDENT_NUM)
				{
					printf("超出了最大范围\n");
					continue;
				}
				res=Insert(a,num);
		if(res==2)
		{
			printf("成功！\n");
		}else{
			printf("失败！\n");
		}
		break;
			case 2:
				printf("请输入要删除的同学学号：\n");
				scanf("%d",&student_id);
				fflush(stdin);
				res=Search(a,student_id);
				if(res==-1)
		{
			printf("该同学不存在！\n");
		}else{
			Delete(a,res);
			num=num-1;
		}
		break;
			case 3:
				printf("请输入要查找的同学学号：\n");
				scanf("%d",&student_id);
				fflush(stdin);
				res=Search(a,student_id);
				if(res==-1)
		{
			printf("该同学不存在！\n");
		}else
			{
				printf("该同学位于第%d位！\n",res);
			}
		break;
			case 4:
				printALL(a,num);
				
				break;
			case 5:
				return 0;
			default:
				printf("输入有错！\n");
				break;
		}
	}
}
int Insert(STUDENT stu[],int num)
{
	int i;
	int res;
	for(i=0;i<=num-1;i++)
	{
		printf("请输入新同学学号：\n");
		res=scanf("%d",&stu[i].id);
		fflush(stdin);
		if(res==0)
		{
			printf("请重新输入！\n");
			res=scanf("%d",&stu[i].id);

		}
		printf("请输入新同学姓名：\n");
			res=scanf("%d",&stu[i].name);
			fflush(stdin);

			printf("请输入新同学电话号码：\n");
			res=scanf("%d",&stu[i].phone);
			fflush(stdin);
			if(res==0)
			{
				printf("请重新输入！\n");
				res=scanf("%d",&stu[i].phone);

			}

	}
	return 2;
}
int Search(STUDENT stu[],int student_id)
{
	int i;
	for(i=0;i<=MAX_STUDENT_NUM;i++)
	{
		if(stu[i].id==student_id)
		{
			printf("学号:%d,姓名:%s,电话:%d\n",stu[i].id,stu[i].name,stu[i].phone);
			return i+1;
		}
	}
	return -1;
}
int Delete(STUDENT stu[],int student_id)
{
	int j;
	for(j=student_id;j<=MAX_STUDENT_NUM;j++)
	{
		stu[j-1].id=stu[j].id;
		stu[j-1].name[10]=stu[j].name[10];
		stu[j-1].phone=stu[j].phone;
	}
	printf("删除成功！\n");
	return 1;
}
void printALL(STUDENT stu[],int num)
{
	int i;
	if(num==0)
	{
		printf("没有学生！\n");

	}else
	{
		for(i=0;i<num;i++)
		{
			printf("学号:%d,姓名:%s,电话:%d\n",stu[i].id,&stu[i].name,&stu[i].phone);
			printf("\n");

		}

	}
				printf("\n");

}
